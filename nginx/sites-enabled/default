
map $arg_rotate $rotate_volume {
  default 180;
  90 90;
  180 180;
  270 270;
}

server {
  server_name traine5.ddns.net;

  listen [::]:443 ssl ipv6only=on;
  listen 443 ssl;
  ssl_certificate /etc/letsencrypt/live/traine5.ddns.net/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/traine5.ddns.net/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  root /var/www/html;

  index index.nginx-debian.html;

  location / {
    try_files $uri $uri/ =404;
  }

  location /secondpage {
    try_files /secondpage.html =404;
  }

  location /music {
    try_files /music.mp3 =404;
    add_header Content-Disposition 'attachment; filename="music.mp3"';
    add_header Content-Type audio/mpeg;
  }

  location /info.php {
    proxy_pass http://apache2:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect http:// $scheme://$host;
  }

  location /redblue {
    proxy_pass http://backend;

    proxy_redirect default;
    proxy_redirect http://backend:8081 https://$host;
    proxy_redirect http://backend:8082 https://$host;
  }


  location /secondserver {
    proxy_pass https://www.wikipedia.org/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /image1 {
    rewrite ^/image1(.*) /images/image1.jpg last;	
  }

  location ~* \.jpg$ {
    image_filter rotate $rotate_volume;
    image_filter_buffer 20M;
    image_filter_jpeg_quality 85;
  }


  location /image2 {
    rewrite ^/image2(.*) /images/image2.png last; 
  }



}

server {
  listen 80 ;
  listen [::]:80 ;
  server_name traine5.ddns.net;

  return 301 https://$host$request_uri;

}
